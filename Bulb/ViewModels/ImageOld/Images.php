<?php

namespace Bulb\Models\Image;


use Bulb\App\App;
use Bulb\App\LocalCollection;
use Bulb\App\LocalDir;


class Images extends LocalCollection
{
    protected $webPath;

    protected $imgPath;

    public function __construct(App $_app, string $_dirname = 'images')
    {
        $_dirname = \basename($_dirname);

        parent::__construct($_app->Cache('img-'.$_dirname.'.php'));

        $this->webPath = $_app->WebPath($_dirname.'/');

        $this->imgPath = ($_app->LocalWebPath($_dirname.'/'));

        $this->Load();
    }

    public function Image(string $_name) : ?string
    {
        $im = $this->Find($_name);

        if($im !== null)
        {
            return ($this->path->Dirname().$im);
        }

        return [];
    }

    public function Load($_filename = null) : array
    {
        parent::Load(); // TODO: Change the autogenerated stub

        if(empty($this->items))
        {
            $this->LoadImages();
        }

        return $this->items;
    }

    public function LoadImages()
    {
        $a = LocalDir::globDir($this->imgPath, '*.jpg');

        foreach ($a as $img)
        {
            $this->items[$img] = ($this->webPath.$img);
        }

        if($this->Count() > 0)
        {
            $this->path->Save($this->items);
            //$this->imFirst = \reset($this->items);
            //$this->imRand = $this->items[\rand(0, ($this->Count() -1))];
        }
    }

}